{
  // Sophia Intel AI Backend Workspace - Cursor Settings
  "$schema": "https://cursor.sh/schemas/settings.json",
  
  // Workspace Identity
  "workspace.name": "sophia-intel-ai",
  "workspace.type": "backend",
  "workspace.description": "Sophia Intel AI Backend with MCP Servers",
  
  // MCP Server Configuration
  "mcp.servers": {
    "memory": {
      "enabled": true,
      "type": "http",
      "url": "http://localhost:8081",
      "protocol": "http",
      "healthCheck": {
        "enabled": true,
        "interval": 30000,
        "endpoint": "/health"
      },
      "retry": {
        "maxAttempts": 3,
        "baseDelay": 1000
      },
      "timeout": 30000,
      "description": "Memory and context management server"
    },
    
    "filesystem": {
      "enabled": true,
      "type": "http",
      "url": "http://localhost:8082",
      "protocol": "http",
      "healthCheck": {
        "enabled": true,
        "interval": 30000,
        "endpoint": "/health"
      },
      "retry": {
        "maxAttempts": 3,
        "baseDelay": 1000
      },
      "timeout": 30000,
      "description": "File system operations with allowlist protection"
    },
    
    "analytics": {
      "enabled": true,
      "type": "http",
      "url": "http://localhost:8083",
      "protocol": "http",
      "healthCheck": {
        "enabled": true,
        "interval": 30000,
        "endpoint": "/health"
      },
      "retry": {
        "maxAttempts": 3,
        "baseDelay": 1000
      },
      "timeout": 30000,
      "description": "Analytics and metrics collection server"
    },
    
    "git": {
      "enabled": true,
      "type": "http",
      "url": "http://localhost:8084",
      "protocol": "http",
      "healthCheck": {
        "enabled": true,
        "interval": 30000,
        "endpoint": "/health"
      },
      "retry": {
        "maxAttempts": 3,
        "baseDelay": 1000
      },
      "timeout": 30000,
      "description": "Git operations and symbol search server"
    },
    
    "unified": {
      "enabled": true,
      "type": "http",
      "url": "http://localhost:8085",
      "protocol": "http",
      "healthCheck": {
        "enabled": true,
        "interval": 30000,
        "endpoint": "/health"
      },
      "retry": {
        "maxAttempts": 3,
        "baseDelay": 1000
      },
      "timeout": 60000,
      "description": "Unified orchestration server"
    }
  },
  
  // MCP Stdio Server Configuration (for local MCP servers)
  "mcp.stdio.servers": {
    "local-memory": {
      "enabled": false,
      "command": "python",
      "args": ["mcp/memory_server.py", "--stdio"],
      "env": {
        "PYTHONPATH": "/Users/lynnmusil/sophia-intel-ai"
      },
      "fallback": true,
      "description": "Local stdio memory server (fallback)"
    },
    
    "local-filesystem": {
      "enabled": false,
      "command": "python",
      "args": ["mcp/filesystem/server.py", "--stdio"],
      "env": {
        "PYTHONPATH": "/Users/lynnmusil/sophia-intel-ai"
      },
      "fallback": true,
      "description": "Local stdio filesystem server (fallback)"
    }
  },
  
  // MCP Client Configuration
  "mcp.client": {
    "connectionPool": {
      "minSize": 2,
      "maxSize": 10,
      "acquireTimeout": 5000,
      "idleTimeout": 300000
    },
    "circuitBreaker": {
      "enabled": true,
      "failureThreshold": 5,
      "successThreshold": 2,
      "timeout": 30000
    },
    "retry": {
      "enabled": true,
      "maxAttempts": 3,
      "baseDelay": 1000,
      "maxDelay": 10000,
      "exponentialBase": 2
    },
    "cache": {
      "enabled": true,
      "ttl": 300,
      "maxSize": 1000
    }
  },
  
  // Extension Integration
  "extensions": {
    "rooCode": {
      "enabled": true,
      "mcp.integration": true,
      "mcp.servers": ["memory", "filesystem", "git"],
      "socketPort": 9001
    },
    "clineBot": {
      "enabled": true,
      "mcp.integration": true,
      "mcp.servers": ["memory", "filesystem", "analytics"],
      "socketPort": 9002,
      "enhancedMode": true
    }
  },
  
  // AI Model Configuration
  "ai.models": {
    "default": "claude-opus-4.1",
    "architecture": "claude-opus-4.1",
    "implementation": "grok-5",
    "testing": "deepseek-v3",
    "performance": "google-flash-2.5"
  },
  
  // Editor Settings
  "editor.fontSize": 13,
  "editor.fontFamily": "'JetBrains Mono', 'Fira Code', monospace",
  "editor.fontLigatures": true,
  "editor.tabSize": 2,
  "editor.insertSpaces": true,
  "editor.wordWrap": "on",
  "editor.minimap.enabled": true,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.suggestSelection": "first",
  "editor.acceptSuggestionOnCommitCharacter": true,
  "editor.quickSuggestions": {
    "other": true,
    "comments": false,
    "strings": true
  },
  
  // File Settings
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 1000,
  "files.exclude": {
    "**/.git": false,
    "**/.DS_Store": true,
    "**/node_modules": true,
    "**/__pycache__": true,
    "**/*.pyc": true,
    "**/dist": false,
    "**/build": false,
    "**/.pytest_cache": true,
    "**/.ruff_cache": true
  },
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/**": true,
    "**/.hg/store/**": true,
    "**/__pycache__/**": true
  },
  
  // Search Settings
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/*.code-search": true,
    "**/__pycache__": true,
    "**/dist": true,
    "**/build": true,
    "**/.venv": true,
    "**/.pytest_cache": true
  },
  
  // Terminal Settings
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.fontSize": 13,
  "terminal.integrated.fontFamily": "'JetBrains Mono', monospace",
  "terminal.integrated.env.osx": {
    "WORKSPACE_ROOT": "/Users/lynnmusil/sophia-intel-ai",
    "MCP_ENABLED": "true"
  },
  
  // Python Settings
  "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Enabled": false,
  "python.linting.mypyEnabled": true,
  "python.formatting.provider": "black",
  "python.testing.pytestEnabled": true,
  "python.testing.unittestEnabled": false,
  "python.analysis.typeCheckingMode": "strict",
  "python.analysis.autoImportCompletions": true,
  
  // TypeScript Settings
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.preferences.includePackageJsonAutoImports": "auto",
  "typescript.tsdk": "node_modules/typescript/lib",
  "typescript.enablePromptUseWorkspaceTsdk": true,
  
  // Git Settings
  "git.enableSmartCommit": true,
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.fetchOnPull": true,
  
  // Debug Settings
  "debug.console.fontSize": 13,
  "debug.console.fontFamily": "'JetBrains Mono', monospace",
  "debug.internalConsoleOptions": "openOnSessionStart",
  
  // Workspace Settings
  "workbench.colorTheme": "Default Dark+",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.startupEditor": "none",
  "workbench.editor.enablePreview": false,
  "workbench.editor.showTabs": true,
  "workbench.sideBar.location": "left",
  "workbench.activityBar.visible": true,
  "workbench.statusBar.visible": true,
  
  // Security Settings
  "security.workspace.trust.untrustedFiles": "open",
  "security.workspace.trust.enabled": true,
  
  // Telemetry
  "telemetry.telemetryLevel": "off",
  
  // Custom Commands
  "customCommands": {
    "startMCPServers": {
      "command": "./scripts/dual_workspace_manager.sh start-backend",
      "description": "Start all MCP servers for backend workspace"
    },
    "stopMCPServers": {
      "command": "./scripts/dual_workspace_manager.sh stop-backend",
      "description": "Stop all MCP servers"
    },
    "checkMCPHealth": {
      "command": "./scripts/dual_workspace_manager.sh health-check",
      "description": "Check health of all MCP servers"
    }
  }
}