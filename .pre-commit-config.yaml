# Pre-commit hooks for code quality
# Install: pre-commit install
# Run manually: pre-commit run --all-files

default_language_version:
  python: python3.11

repos:
  # General fixes
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(.*\.md|.*\.mdx)$
      - id: end-of-file-fixer
        exclude: ^(.*\.md|.*\.mdx)$
      - id: check-yaml
        args: [--unsafe]
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: name-tests-test
        args: [--pytest-test-first]
      - id: requirements-txt-fixer

  # Security - Enhanced Secret Detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: ^(.*\.lock|package-lock\.json|pnpm-lock\.yaml)$

  # Gitleaks - Advanced Secret Scanner
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.28.0
    hooks:
      - id: gitleaks

  # Bandit - Python Security Linter
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: ["-r", "app/", "--skip", "B101"]
        files: .py$

  # Safety - Check Python dependencies for vulnerabilities
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.4.2
    hooks:
      - id: python-safety-dependencies-check
        files: requirements.*\.txt$

  # Python formatting
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3.11
        args: [--line-length=100]

  # Python imports
  - repo: https://github.com/PyCQA/isort
    rev: 6.0.1
    hooks:
      - id: isort
        args: [--profile, black, --line-length, "100"]

  # Python linting
  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.12.12
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]

  # Python type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        additional_dependencies:
          - pydantic>=2.5.0
          - fastapi>=0.104.0
          - sqlalchemy>=2.0.0
        args: [--ignore-missing-imports, --strict-optional]
        exclude: ^(tests/|scripts/|migrations/)

  # Python docstrings
  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        exclude: ^(tests/|migrations/|__pycache__/)
        files: ^app/.*\.py$

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [yaml, json, markdown]
        exclude: ^(pnpm-lock\.yaml|package-lock\.json|.*\.min\.json)$

  # Shell script checks
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.11.0.1
    hooks:
      - id: shellcheck
        args: [--severity=warning]

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        args: [--fix]
        exclude: ^(CHANGELOG\.md|docs/api/)

  # SQL formatting
  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 3.4.2
    hooks:
      - id: sqlfluff-lint
        args: [--dialect, sqlite]
        files: ^.*\.sql$
      - id: sqlfluff-fix
        args: [--dialect, sqlite]
        files: ^.*\.sql$

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.13.1
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # Git commit message linting
  - repo: https://github.com/jorisroovers/gitlint
    rev: v0.19.1
    hooks:
      - id: gitlint
        args: [--msg-filename]

  # Custom hooks
  - repo: local
    hooks:
      - id: check-duplicates
        name: Check for duplicate code and components
        entry: python scripts/check_duplicates.py
        language: system
        pass_filenames: false
        always_run: true
        stages: [pre-commit]
        verbose: true

      - id: check-architecture
        name: Check architecture compliance
        entry: python scripts/check_architecture.py
        language: system
        pass_filenames: false
        always_run: true
        stages: [pre-commit]
        verbose: true

      - id: no-print-statements
        name: No print statements
        entry: '\bprint\('
        language: pygrep
        types: [python]
        exclude: ^(scripts/|tests/|.*_test\.py|.*debug.*\.py)$

      - id: no-todos
        name: No TODO comments in production
        entry: '#\s*(TODO|FIXME|XXX)'
        language: pygrep
        types: [python]
        exclude: ^(tests/|scripts/|docs/)
        stages: [pre-commit]

      - id: requirements-sync
        name: Sync requirements
        entry: python scripts/sync_requirements.py
        language: system
        files: ^(requirements.*\.txt|pyproject\.toml)$
        pass_filenames: false

      - id: api-schema-update
        name: Update OpenAPI schema
        entry: python scripts/update_openapi.py
        language: system
        files: ^app/api/.*\.py$
        pass_filenames: false

      - id: forbid-ephemeral-reports
        name: Block committing ephemeral report artifacts
        language: script
        entry: scripts/hooks/block_ephemeral_reports.sh
        files: |
          (?x)^(
            deployment_results/.*|
            test_reports/.*|
            reports/.*|
            artifacts/.*|
            .*/test_reports/.*|
            .*-20[0-9]{2}-[01][0-9]-[0-3][0-9].*\.(md|json)$|
            .*20[0-9]{2}-[01][0-9]-[0-3][0-9].*\.(md|json)$
          )$
        stages: [pre-commit]

# Configuration for specific hooks
exclude: |
  (?x)^(
    .*\.egg-info/.*|
    \.git/.*|
    \.mypy_cache/.*|
    \.pytest_cache/.*|
    \.ruff_cache/.*|
    \.tox/.*|
    \.venv/.*|
    build/.*|
    dist/.*|
    node_modules/.*|
    venv/.*|
    __pycache__/.*|
    .*\.pyc|
    .*\.pyo|
    .*\.pyd|
    .*\.db|
    .*\.sqlite|
    .*\.log
  )$

fail_fast: false
default_stages: [pre-commit, pre-push]
