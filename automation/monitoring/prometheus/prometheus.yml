global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: "sophia-intel-ai"
    environment: "${SOPHIA_ENVIRONMENT:-development}"

rule_files:
  - "rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

scrape_configs:
  # Prometheus itself
  - job_name: "prometheus"
    static_configs:
      - targets: ["localhost:9090"]
    scrape_interval: 30s
    metrics_path: "/metrics"

  # Node Exporter (system metrics)
  - job_name: "node-exporter"
    static_configs:
      - targets: ["node-exporter:9100"]
    scrape_interval: 15s

  # Docker containers
  - job_name: "docker-daemon"
    static_configs:
      - targets: ["host.docker.internal:9323"]
    scrape_interval: 30s

  # Redis metrics
  - job_name: "redis"
    static_configs:
      - targets: ["redis-exporter:9121"]
    scrape_interval: 30s

  # PostgreSQL metrics
  - job_name: "postgres"
    static_configs:
      - targets: ["postgres-exporter:9187"]
    scrape_interval: 30s

  # Weaviate metrics
  - job_name: "weaviate"
    static_configs:
      - targets: ["weaviate:2112"]
    scrape_interval: 30s
    metrics_path: "/metrics"

  # Sophia Intel AI Services
  - job_name: "unified-api"
    static_configs:
      - targets: ["unified-api:8000"]
    scrape_interval: 15s
    metrics_path: "/metrics"
    scrape_timeout: 10s

  - job_name: "sophia-orchestrator"
    static_configs:
      - targets: ["sophia-orchestrator:8000"]
    scrape_interval: 15s
    metrics_path: "/metrics"
    scrape_timeout: 10s

  - job_name: "artemis-orchestrator"
    static_configs:
      - targets: ["artemis-orchestrator:8000"]
    scrape_interval: 15s
    metrics_path: "/metrics"
    scrape_timeout: 10s

  # Health Monitor
  - job_name: "health-monitor"
    static_configs:
      - targets: ["health-monitor:8000"]
    scrape_interval: 30s
    metrics_path: "/metrics"

  # Kubernetes service discovery (if running in K8s)
  - job_name: "kubernetes-pods"
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - sophia-intel-ai
    relabel_configs:
      # Only scrape pods that have prometheus.io/scrape annotation set to true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      # Allow pods to override the scrape path
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      # Allow pods to override the scrape port
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      # Add pod labels as metric labels
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      # Add namespace and pod name as labels
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Kubernetes services discovery
  - job_name: "kubernetes-services"
    kubernetes_sd_configs:
      - role: service
        namespaces:
          names:
            - sophia-intel-ai
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name

# Remote write configuration (for long-term storage)
remote_write:
  - url: "${PROMETHEUS_REMOTE_WRITE_URL:-}"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500
