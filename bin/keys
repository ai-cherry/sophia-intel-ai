#!/usr/bin/env bash
# Edit/view the single-source env file without fuss

set -euo pipefail
ENV_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)/.env.master"

usage(){
  echo "keys: manage the one env file ($ENV_PATH)"
  echo "Usage: keys [edit|show|path|create|sync|missing|list]"
}

cmd=${1:-path}
case "$cmd" in
  create)
    if [ -f "$ENV_PATH" ]; then echo "Already exists: $ENV_PATH"; exit 0; fi
    touch "$ENV_PATH" && chmod 600 "$ENV_PATH"
    echo "# Add your API keys here" > "$ENV_PATH"
    echo "Created $ENV_PATH (chmod 600)"
    ;;
  edit)
    if [ ! -f "$ENV_PATH" ]; then touch "$ENV_PATH" && chmod 600 "$ENV_PATH"; fi
    ${EDITOR:-nano} "$ENV_PATH"
    ;;
  show)
    if [ ! -f "$ENV_PATH" ]; then echo "Missing: $ENV_PATH"; exit 1; fi
    sed -E 's/(=.*).*/\1********/g' "$ENV_PATH"
    ;;
  path)
    echo "$ENV_PATH"
    ;;
  sync)
    python3 "$(cd "$(dirname "$0")"/.. && pwd)/scripts/keys_sync.py"
    ;;
  list)
    if [ ! -f "$ENV_PATH" ]; then echo "Missing: $ENV_PATH"; exit 1; fi
    grep -E '^[A-Z0-9_]+=' "$ENV_PATH" | cut -d= -f1
    ;;
  missing)
    REG="$(cd "$(dirname "$0")"/.. && pwd)/config/keys_registry.json"
    if [ ! -f "$REG" ]; then echo "Missing registry: $REG"; exit 1; fi
    TMP=$(mktemp)
    grep -E '^[A-Z0-9_]+=' "$ENV_PATH" 2>/dev/null | cut -d= -f1 | sort -u > "$TMP" || true
    jq -r '.order[].keys[]' "$REG" | sort -u > "$TMP.keys"
    echo "Missing keys:"
    comm -23 "$TMP.keys" "$TMP" || true
    rm -f "$TMP" "$TMP.keys"
    ;;
  *) usage; exit 1;;
esac
