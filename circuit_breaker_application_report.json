{
  "files_analyzed": 118,
  "files_updated": 41,
  "circuit_breakers_added": {
    "external_api": 57,
    "database": 38,
    "redis": 9,
    "llm": 7,
    "webhook": 8
  },
  "functions_protected": [
    "portkey_config.py:get_gateway",
    "portkey_config.py:__post_init__",
    "portkey_config.py:to_headers",
    "portkey_config.py:__init__",
    "portkey_config.py:_setup_clients",
    "portkey_config.py:chat",
    "portkey_config.py:achat",
    "portkey_config.py:embed",
    "agno_bridge.py:search_memory",
    "elite_portkey_config.py:demo_elite_models",
    "elite_portkey_config.py:_setup_clients",
    "elite_portkey_config.py:elite_completion",
    "code_search.py:run",
    "code_search.py:run",
    "real_executor.py:_execute_streaming",
    "real_executor.py:_execute_non_streaming",
    "real_executor.py:embed_text",
    "config.py:validate_required_keys",
    "config.py:get_active_features",
    "observability.py:check_search_system",
    "cost_monitor.py:_get_current_metrics",
    "cost_monitor.py:cleanup_old_data",
    "middleware.py:configure_breakers",
    "dual_tier_embeddings.py:embed_single",
    "dual_tier_embeddings.py:embed_batch",
    "dual_tier_embeddings.py:get_stats",
    "embed_router.py:embed_batch",
    "index_weaviate.py:hybrid_search_merge",
    "index_weaviate.py:search_by_vector",
    "modernbert_embeddings.py:embed_text",
    "modernbert_embeddings.py:_generate_embedding",
    "embedding_pipeline.py:generate_embeddings",
    "embedding_pipeline.py:_process_batch",
    "embedding_coordinator.py:generate_embeddings",
    "supermemory_mcp.py:recall_relevant_memories",
    "supermemory_mcp.py:main",
    "supermemory_mcp.py:search_memory",
    "supermemory_mcp.py:handle_request",
    "quicknlp.py:_get_workflow_trigger",
    "command_dispatcher.py:__init__",
    "command_dispatcher.py:_get_system_status",
    "env_loader.py:_update_config_from_env",
    "env_loader.py:_validate_llm_gateway",
    "env_loader.py:_validate_providers",
    "mcp_security.py:generate_assistant_token",
    "mcp_security.py:verify_token",
    "mcp_security.py:revoke_session",
    "mcp_security.py:get_active_sessions",
    "server_v2.py:setup_routes",
    "server_v2.py:get_or_generate_embedding",
    "server_v2.py:store_memory",
    "server_v2.py:search_memory",
    "portkey_dynamic_client.py:create_dynamic_client",
    "portkey_dynamic_client.py:__init__",
    "portkey_dynamic_client.py:_generate_portkey_config",
    "portkey_dynamic_client.py:refresh_models",
    "portkey_dynamic_client.py:get_model_for_task",
    "portkey_dynamic_client.py:create_completion",
    "portkey_dynamic_client.py:check_model_health",
    "portkey_dynamic_client.py:estimate_cost",
    "portkey_dynamic_client.py:get_available_models",
    "prometheus_metrics.py:update_system_metrics",
    "otel_config.py:test_endpoint",
    "unified_facade.py:_inject_memory_context",
    "real_streaming.py:stream_real_ai_execution",
    "advanced_gateway_2025.py:chat_with_gpt5",
    "advanced_gateway_2025.py:chat_with_gemini25_pro",
    "advanced_gateway_2025.py:chat_with_claude_sonnet4",
    "advanced_gateway_2025.py:generate_embeddings_32k",
    "advanced_gateway_2025.py:__init__",
    "advanced_gateway_2025.py:validate_environment",
    "advanced_gateway_2025.py:setup_latest_models",
    "advanced_gateway_2025.py:setup_portkey_configs",
    "advanced_gateway_2025.py:chat_completion",
    "advanced_gateway_2025.py:generate_embeddings",
    "advanced_gateway_2025.py:get_latest_models",
    "advanced_gateway_2025.py:health_check",
    "advanced_gateway_2025.py:get_cache_statistics",
    "advanced_gateway_2025.py:invalidate_cache",
    "health.py:environment_check",
    "real_swarm_execution.py:stream_real_swarm_execution",
    "unified_server.py:get_config",
    "unified_server.py:search_memory",
    "unified_server.py:hybrid_search",
    "unified_server.py:run_team",
    "unified_server.py:_setup_configuration",
    "unified_server.py:initialize",
    "nl_endpoints.py:process_natural_language",
    "nl_endpoints.py:trigger_workflow",
    "nl_endpoints.py:get_workflow_status",
    "nl_endpoints.py:get_system_status",
    "nl_endpoints.py:workflow_callback",
    "nl_endpoints.py:trigger_workflow_async",
    "dependencies.py:get_weaviate_client",
    "memory_enhanced_swarm.py:_memory_enhanced_safety_check",
    "memory_enhanced_swarm.py:_get_coding_specific_context",
    "memory_enhanced_swarm.py:evolution_with_memory",
    "memory_enhanced_swarm.py:consciousness_with_memory",
    "memory_integration.py:search_memory",
    "memory_integration.py:get_swarm_history",
    "memory_integration.py:retrieve_patterns",
    "memory_integration.py:get_messages_for_swarm",
    "memory_integration.py:retrieve_learnings",
    "memory_integration.py:get_performance_trends",
    "memory_integration.py:_load_relevant_context",
    "unified_enhanced_orchestrator.py:_memory_enhanced_safety_check",
    "unified_enhanced_orchestrator.py:_memory_enhanced_swarm_selection",
    "weaviate_migration.py:__init__",
    "weaviate_migration.py:create_production_client",
    "weaviate_migration.py:get_portkey_headers",
    "weaviate_migration.py:get_portkey_config",
    "weaviate_migration.py:print_migration_summary",
    "memory_integration.py:enhance_decision_with_memory",
    "swarm_orchestrator.py:_check_memory_health",
    "swarm_orchestrator.py:_search_related_memories",
    "team_factory.py:_build_pool_generators",
    "swarms.py:get_swarm_history",
    "chat_orchestrator.py:_get_memory_context",
    "chat_orchestrator.py:_handle_memory_operation"
  ],
  "errors": [
    "app/core/connections.py: invalid syntax (<unknown>, line 99)",
    "app/memory/enhanced_memory.py: invalid syntax (<unknown>, line 88)",
    "app/agents/simple_orchestrator.py: invalid syntax (<unknown>, line 385)"
  ]
}