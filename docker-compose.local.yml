# ==============================================
# SOPHIA INTEL AI - LOCAL DEVELOPMENT ENVIRONMENT
# Real Services - No Mocks, Uses Real APIs + Local Services
#
# Following ADR-006: Configuration Management Standardization
# - Uses enhanced EnvLoader with Pulumi ESC integration
# - Environment-aware configuration loading
# - Proper secret management and validation
# ==============================================

version: '3.8'

services:
  # ==============================================
  # WEAVIATE v1.32+ - Advanced Vector Database
  # ==============================================
  weaviate:
    image: semitechnologies/weaviate:1.32.1
    container_name: sophia-weaviate-v132
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "50051:50051"  # gRPC port for high-performance operations
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      
      # v1.32+ Advanced Features
      ENABLE_MODULES: 'text2vec-openai,text2vec-cohere,text2vec-huggingface,generative-openai,qna-openai'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-openai'
      
      # RQ Compression (75% memory reduction)
      VECTOR_INDEX_TYPE: 'hnsw'
      ENABLE_VECTOR_QUANTIZATION: 'true'
      QUANTIZATION_TYPE: 'rq'
      
      # Performance optimizations
      CLUSTER_HOSTNAME: 'node1'
      CLUSTER_GOSSIP_BIND_PORT: '7946'
      CLUSTER_DATA_BIND_PORT: '7947'
      
      # Multi-tenancy support
      ENABLE_MULTI_TENANCY: 'true'
      AUTO_TENANT_CREATION: 'true'
      
      # Simplified memory configuration
      GOGC: '100'
      
    volumes:
      - weaviate_data:/var/lib/weaviate
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ==============================================  
  # LOCAL POSTGRESQL DATABASE
  # ==============================================
  postgres:
    image: postgres:16-alpine
    container_name: sophia-postgres-local
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: sophia
      POSTGRES_USER: sophia
      POSTGRES_PASSWORD: sophia_secure_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sophia -d sophia"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==============================================
  # LOCAL REDIS CACHE (Fallback for Redis Cloud)
  # ==============================================
  redis:
    image: redis:7-alpine
    container_name: sophia-redis-local
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass sophia_redis_2024
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "sophia_redis_2024", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==============================================
  # UNIFIED API SERVER (Main Backend) - ADR-006 Enhanced
  # ==============================================
  unified-api:
    build:
      context: .
      dockerfile: Dockerfile.unified-api
    container_name: sophia-unified-api
    restart: unless-stopped
    ports:
      - "8000:8003"
    environment:
      # Environment configuration (ADR-006)
      - NODE_ENV=development
      - ENVIRONMENT=dev
      - USE_PULUMI_ESC=false  # Use .env.local for local development
      - DEBUG=true
      - LOG_LEVEL=debug
      - USE_REAL_APIS=true
      - FAIL_ON_MOCK_FALLBACK=true
      - LOCAL_DEV_MODE=true
      
      # Local service URLs (docker networking)
      - WEAVIATE_URL=http://weaviate:8080
      - POSTGRES_URL=postgresql://sophia:sophia_secure_password_2024@postgres:5432/sophia
      - REDIS_URL=redis://:sophia_redis_2024@redis:6379
      - UNIFIED_API_URL=http://localhost:8003
      - MCP_SERVER_URL=http://mcp-server:8004
      - VECTOR_STORE_URL=http://vector-store:8005
      
      # Enhanced configuration validation
      - ENABLE_CONFIG_VALIDATION=true
      - CONFIG_SOURCE=docker_compose
      
    env_file:
      - .env.local
    depends_on:
      weaviate:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app:ro
      - ./pulumi:/pulumi:ro
      - ./app/config:/app/config:ro  # Enhanced config access
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ==============================================
  # AGNO BRIDGE (UI Bridge Server) - ADR-006 Enhanced
  # ==============================================
  agno-bridge:
    build:
      context: .
      dockerfile: Dockerfile.agno-bridge
    container_name: sophia-agno-bridge
    restart: unless-stopped
    ports:
      - "7777:7777"
    environment:
      # Enhanced configuration (ADR-006)
      - ENVIRONMENT=dev
      - USE_PULUMI_ESC=false  # Use .env.local for local development
      - DEBUG=true
      - LOCAL_DEV_MODE=true
      
      # Service URLs (docker networking)
      - UNIFIED_API_URL=http://unified-api:8003
      - AGNO_BRIDGE_URL=http://localhost:7777
      - FRONTEND_URL=http://localhost:3333
      
      # Enhanced configuration validation
      - ENABLE_CONFIG_VALIDATION=true
      - CONFIG_SOURCE=docker_compose
      
    env_file:
      - .env.local
    depends_on:
      unified-api:
        condition: service_healthy
    volumes:
      - ./app/config:/app/config:ro  # Enhanced config access
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7777/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==============================================
  # MCP SERVER (Memory & Tool Management) - ADR-006 Enhanced
  # ==============================================
  mcp-server:
    build:
      context: ./pulumi/mcp-server
      dockerfile: Dockerfile
    container_name: sophia-mcp-server
    restart: unless-stopped
    ports:
      - "8004:8004"
    environment:
      # Enhanced configuration (ADR-006)
      - ENVIRONMENT=dev
      - USE_PULUMI_ESC=false  # Use .env.local for local development
      - MCP_SERVER_PORT=8004
      - LOCAL_DEV_MODE=true
      
      # Service URLs (docker networking)
      - WEAVIATE_URL=http://weaviate:8080
      - POSTGRES_URL=postgresql://sophia:sophia_secure_password_2024@postgres:5432/sophia
      - REDIS_URL=redis://:sophia_redis_2024@redis:6379
      - MCP_SERVER_URL=http://localhost:8004
      
      # Enhanced configuration validation
      - ENABLE_CONFIG_VALIDATION=true
      - CONFIG_SOURCE=docker_compose
      
    env_file:
      - .env.local
    depends_on:
      weaviate:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./pulumi/mcp-server/src:/app/src:ro
      - ./app/config:/app/config:ro  # Enhanced config access
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==============================================
  # VECTOR STORE SERVICE (Embedding & Search)
  # ==============================================
  vector-store:
    build:
      context: ./pulumi/vector-store
      dockerfile: Dockerfile
    container_name: sophia-vector-store
    restart: unless-stopped
    ports:
      - "8005:8005"
    environment:
      - VECTOR_STORE_PORT=8005
      - WEAVIATE_URL=http://weaviate:8080
    env_file:
      - .env.local
    depends_on:
      weaviate:
        condition: service_healthy
    volumes:
      - ./pulumi/vector-store/src:/app/src:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==============================================
  # AGENT UI (Next.js Frontend)
  # ==============================================
  agent-ui:
    build:
      context: ./agent-ui
      dockerfile: Dockerfile
    container_name: sophia-agent-ui
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://unified-api:8003
      - NEXT_PUBLIC_DEFAULT_ENDPOINT=http://unified-api:8003
      - NEXT_PUBLIC_PLAYGROUND_URL=http://unified-api:8003
      - NEXT_PUBLIC_BRIDGE_URL=http://agno-bridge:7777
      - NEXT_PUBLIC_USE_BRIDGE=false
    env_file:
      - agent-ui/.env.local
    depends_on:
      unified-api:
        condition: service_healthy
    volumes:
      - ./agent-ui/src:/app/src:ro
      - ./agent-ui/public:/app/public:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  # ==============================================
  # MONITORING - Prometheus (Optional)
  # ==============================================
  prometheus:
    image: prom/prometheus:latest
    container_name: sophia-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    profiles: ["monitoring"]

  # ==============================================
  # MONITORING - Grafana (Optional)
  # ==============================================
  grafana:
    image: grafana/grafana:latest
    container_name: sophia-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=sophia_grafana_admin_2024
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    profiles: ["monitoring"]

# ==============================================
# PERSISTENT VOLUMES
# ==============================================
volumes:
  weaviate_data:
    driver: local
    name: sophia_weaviate_data
  postgres_data:
    driver: local  
    name: sophia_postgres_data
  redis_data:
    driver: local
    name: sophia_redis_data
  prometheus_data:
    driver: local
    name: sophia_prometheus_data
  grafana_data:
    driver: local
    name: sophia_grafana_data

# ==============================================
# NETWORKS
# ==============================================
networks:
  default:
    name: sophia_local_network
    driver: bridge