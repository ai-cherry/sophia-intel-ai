# ==============================================
# SOPHIA INTEL AI - MINIMAL RAG ENVIRONMENT
# Phase 2, Week 1-2: MVP Setup with Ollama and Basic RAG
# ==============================================

version: '3.8'

services:
  # ==============================================
  # OLLAMA - Local LLM Service
  # ==============================================
  ollama:
    image: ollama/ollama:latest
    container_name: sophia-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_KEEP_ALIVE=5m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # ==============================================
  # WEAVIATE - Vector Database (Existing)
  # ==============================================
  weaviate:
    image: semitechnologies/weaviate:1.32.1
    container_name: sophia-weaviate-minimal
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'  # We'll use Ollama embeddings
      CLUSTER_HOSTNAME: 'node1'
      LOG_LEVEL: 'info'
    volumes:
      - weaviate_data:/var/lib/weaviate
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==============================================
  # REDIS - Cache (Existing)
  # ==============================================
  redis:
    image: redis:7-alpine
    container_name: sophia-redis-minimal
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # ==============================================
  # POSTGRES - Database (Existing, for metadata)
  # ==============================================
  postgres:
    image: postgres:16-alpine
    container_name: sophia-postgres-minimal
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: sophia_rag
      POSTGRES_USER: sophia
      POSTGRES_PASSWORD: sophia_rag_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sophia -d sophia_rag"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==============================================
  # API - Minimal RAG Service
  # ==============================================
  api:
    build:
      context: .
      dockerfile: Dockerfile.minimal
    container_name: sophia-api-minimal
    restart: unless-stopped
    ports:
      - "8000:8003"
    environment:
      # Service URLs
      OLLAMA_URL: 'http://ollama:11434'
      WEAVIATE_URL: 'http://weaviate:8080'
      REDIS_URL: 'redis://redis:6379'
      POSTGRES_URL: 'postgresql://sophia:sophia_rag_2024@postgres:5432/sophia_rag'
      
      # Minimal config
      LOCAL_DEV_MODE: 'true'
      RAG_MODE: 'minimal'
      OLLAMA_MODEL: 'llama3.2:3b'
      
      # Logging
      LOG_LEVEL: 'debug'
    depends_on:
      - ollama
      - weaviate
      - redis
      - postgres
    volumes:
      - ./app:/app
      - ./data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==============================================
  # N8N - Workflow Automation
  # ==============================================
  n8n:
    image: n8nio/n8n:latest
    container_name: sophia-n8n
    restart: unless-stopped
    ports:
      - "8300:5678"
    environment:
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=http://n8n:5678/
      - N8N_ENCRYPTION_KEY=sophia_n8n_secret_key_2024
      - N8N_USER_MANAGEMENT_DISABLED=true
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_METRICS=true
      - EXECUTIONS_PROCESS=main
      - N8N_LOG_LEVEL=info
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  ollama_data:
    driver: local
  weaviate_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  n8n_data:
    driver: local

networks:
  default:
    name: sophia-minimal-network
    driver: bridge
