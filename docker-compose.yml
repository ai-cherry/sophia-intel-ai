# Sophia Intel AI - Local Development Compose
# Minimal services for local deployment with full UI

services:
  # Core API with Dashboard UI
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - PORT=8000
      - BIND_IP=0.0.0.0
    env_file:
      - .env.master
    volumes:
      - ./app:/app/app
      - ./mcp:/app/mcp
      - ./config:/app/config
    depends_on:
      - redis
      - weaviate
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MCP Memory Server
  mcp-memory:
    build: .
    command: ["python", "-m", "uvicorn", "mcp.memory_server:app", "--host", "0.0.0.0", "--port", "8081"]
    ports:
      - "8081:8081"
    environment:
      - ENVIRONMENT=development
    env_file:
      - .env.master
    volumes:
      - ./mcp:/app/mcp
      - ./app:/app/app
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MCP Filesystem Server
  mcp-filesystem:
    build: .
    command: ["python", "-m", "uvicorn", "mcp.filesystem.server:app", "--host", "0.0.0.0", "--port", "8082"]
    ports:
      - "8082:8082"
    environment:
      - ENVIRONMENT=development
    env_file:
      - .env.master
    volumes:
      - ./:/workspace
      - ./mcp:/app/mcp
      - ./app:/app/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MCP Git Server
  mcp-git:
    build: .
    command: ["python", "-m", "uvicorn", "mcp.git.server:app", "--host", "0.0.0.0", "--port", "8084"]
    ports:
      - "8084:8084"
    environment:
      - ENVIRONMENT=development
    env_file:
      - .env.master
    volumes:
      - ./:/workspace
      - ./mcp:/app/mcp
      - ./app:/app/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and memory
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Weaviate vector database
  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.25.6
    ports:
      - "8080:8080"
      - "50051:50051"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: 'text2vec-cohere,text2vec-huggingface,text2vec-palm,text2vec-openai,generative-openai,generative-cohere,generative-palm,ref2vec-centroid,reranker-cohere,qna-openai'
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL for structured data (optional)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: sophia
      POSTGRES_USER: sophia
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sophia123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    profiles:
      - full
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sophia"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
  weaviate_data:
  postgres_data:

networks:
  default:
    name: sophia-network
