version: '3.8'

services:
  # Weaviate Vector Database
  weaviate:
    image: semitechnologies/weaviate:1.32.1
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      CLUSTER_HOSTNAME: 'node1'
      LOG_LEVEL: 'info'
    volumes:
      - weaviate_data:/var/lib/weaviate
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:8-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # PostgreSQL for GraphRAG (optional)
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: sophia_intel
      POSTGRES_USER: sophia
      POSTGRES_PASSWORD: sophia_secure_password
      POSTGRES_INIT_DB_ARGS: "--encoding=UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sophia"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Server with Agent Orchestration
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8003:8003"
    environment:
      LOCAL_DEV_MODE: 'true'
      AGENT_API_PORT: '8003'
      MCP_FILESYSTEM: 'true'
      MCP_GIT: 'true'
      MCP_SUPERMEMORY: 'true'
      REDIS_URL: 'redis://redis:6379'
      WEAVIATE_URL: 'http://weaviate:8080'
      POSTGRES_URL: 'postgresql://sophia:sophia_secure_password@postgres:5432/sophia_intel'
      # Add your API keys here or use .env file
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      PORTKEY_API_KEY: ${PORTKEY_API_KEY}
      TOGETHER_API_KEY: ${TOGETHER_API_KEY}
    depends_on:
      - weaviate
      - redis
      - postgres
    volumes:
      - ./app:/app/app
      - ./scripts:/app/scripts
      - ./tmp:/app/tmp
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # UI Dashboard
  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      NEXT_PUBLIC_API_URL: 'http://api:8003'
    depends_on:
      - api
    volumes:
      - ./ui/src:/app/src
      - ./ui/public:/app/public
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  weaviate_data:
  redis_data:
  postgres_data:

networks:
  default:
    name: sophia-intel-network
    driver: bridge