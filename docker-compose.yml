version: "3.8"

services:
  # Redis for L1 cache and ephemeral storage
  redis:
    image: redis:7-alpine
    container_name: sophia-redis
    profiles: ["mcp"]
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Unified API for MCP checks (dev)
  api:
    image: python:3.11-slim
    container_name: sophia-api
    profiles: ["mcp"]
    working_dir: /app
    volumes:
      - ./:/app
    env_file:
      - .env
      - .env.local
    environment:
      AGENT_API_PORT: "8003"
      LOCAL_DEV_MODE: "true"
      REDIS_URL: "redis://redis:6379/0"
    command: >-
      bash -lc "apt-get update && apt-get install -y gcc python3-dev \
      && pip install --no-cache-dir -r requirements.txt \
      && python -m app.api.unified_server"
    ports:
      - "8003:8003"
    depends_on:
      redis:
        condition: service_healthy

  # Weaviate for L2 vector storage
  weaviate:
    image: semitechnologies/weaviate:latest
    container_name: sophia-weaviate
    ports:
      - "8081:8080"
    volumes:
      - weaviate-data:/var/lib/weaviate
    environment:
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      DEFAULT_VECTORIZER_MODULE: "text2vec-openai"
      ENABLE_MODULES: "text2vec-openai,generative-openai"
      CLUSTER_HOSTNAME: "node1"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL for L3 structured storage
  postgres:
    image: postgres:15-alpine
    container_name: sophia-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: sophia
      POSTGRES_USER: sophia
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sophia123}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sophia"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  redis-data:
  weaviate-data:
  postgres-data:

networks:
  default:
    name: sophia-network
    driver: bridge
