version: '3.9'

name: sophia-intel-ai

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: sophia-api
    env_file:
      - docker.env
    environment:
      - AGENT_API_PORT=${AGENT_API_PORT:-8003}
    ports:
      - "${AGENT_API_PORT:-8003}:8003"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8003/health || curl -f http://localhost:8003/healthz || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks: [sophia_net]

  telemetry:
    image: python:3.11-slim
    container_name: sophia-telemetry
    env_file:
      - docker.env
    working_dir: /app
    volumes:
      - ./:/app
    command: ["python", "webui/telemetry_endpoint.py"]
    ports:
      - "${TELEMETRY_PORT:-5003}:5003"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5003/api/telemetry/health || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 10
      start_period: 5s
    networks: [sophia_net]

  ui:
    image: node:18-alpine
    container_name: sophia-ui
    env_file:
      - docker.env
    working_dir: /app/agent-ui
    volumes:
      - ./:/app
    command: ["sh", "-lc", "npm ci && npm run dev -- -p 3000"]
    ports:
      - "3000:3000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000 > /dev/null || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 15
      start_period: 20s
    depends_on:
      telemetry:
        condition: service_healthy
      api:
        condition: service_started
    networks: [sophia_net]

  mcp-memory:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: sophia-mcp-memory
    env_file:
      - docker.env
    environment:
      - MCP_TYPE=memory
      - MCP_PORT=${MCP_MEMORY_PORT:-8081}
    ports:
      - "${MCP_MEMORY_PORT:-8081}:8081"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/health || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks: [sophia_net]

  mcp-fs:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: sophia-mcp-fs
    env_file:
      - docker.env
    environment:
      - MCP_TYPE=fs
      - MCP_PORT=${MCP_FS_PORT:-8082}
    ports:
      - "${MCP_FS_PORT:-8082}:8082"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/health || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks: [sophia_net]

  mcp-git:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: sophia-mcp-git
    env_file:
      - docker.env
    environment:
      - MCP_TYPE=git
      - MCP_PORT=${MCP_GIT_PORT:-8084}
    ports:
      - "${MCP_GIT_PORT:-8084}:8084"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8084/health || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks: [sophia_net]

  mcp-vector:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: sophia-mcp-vector
    env_file:
      - docker.env
    environment:
      - MCP_TYPE=vector
      - MCP_PORT=${MCP_VECTOR_PORT:-8085}
    ports:
      - "${MCP_VECTOR_PORT:-8085}:8085"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8085/health || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks: [sophia_net]
    profiles: [optional]

  mcp-graph:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: sophia-mcp-graph
    env_file:
      - docker.env
    environment:
      - MCP_TYPE=graph
      - MCP_PORT=${MCP_GRAPH_PORT:-8086}
    ports:
      - "${MCP_GRAPH_PORT:-8086}:8086"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8086/health || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks: [sophia_net]
    profiles: [optional]

networks:
  sophia_net:
    driver: bridge

