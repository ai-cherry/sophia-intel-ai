# Dockerfile for MCP Servers (Memory, Filesystem, Git)
# Multi-arch build supporting ARM64 (M3) and AMD64

FROM --platform=$BUILDPLATFORM python:3.11-slim AS builder

# Build arguments
ARG TARGETPLATFORM
ARG BUILDPLATFORM
ARG SERVER_TYPE=filesystem

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    python3-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements
COPY pyproject.toml .
COPY requirements.txt* .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir fastapi uvicorn[standard] redis pydantic httpx && \
    pip install --no-cache-dir GitPython beautifulsoup4

# Runtime stage
FROM --platform=$TARGETPLATFORM python:3.11-slim

ARG SERVER_TYPE=filesystem

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Set working directory
WORKDIR /app

# Copy application code
COPY mcp/ ./mcp/
COPY builder_cli/ ./builder_cli/

# Create non-root user
RUN useradd -m -u 1000 mcp && \
    chown -R mcp:mcp /app

# Create workspace directory
RUN mkdir -p /workspace && \
    chown -R mcp:mcp /workspace

USER mcp

# Environment variables
ENV PYTHONPATH=/app
ENV SERVER_TYPE=${SERVER_TYPE}

# Health check based on server type
HEALTHCHECK --interval=10s --timeout=5s --retries=3 \
    CMD if [ "$SERVER_TYPE" = "memory" ]; then \
            curl -f http://localhost:8081/health || exit 1; \
        elif [ "$SERVER_TYPE" = "git" ]; then \
            curl -f http://localhost:8084/health || exit 1; \
        else \
            curl -f http://localhost:8082/health || exit 1; \
        fi

# Expose ports based on server type
EXPOSE 8081 8082 8084

# Dynamic command based on server type
CMD if [ "$SERVER_TYPE" = "memory" ]; then \
        python -m mcp.memory_server; \
    elif [ "$SERVER_TYPE" = "git" ]; then \
        python -m mcp.git.server; \
    else \
        python -m mcp.filesystem; \
    fi
