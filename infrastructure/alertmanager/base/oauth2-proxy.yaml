apiVersion: v1
kind: ConfigMap
metadata:
  name: oauth2-proxy-config
  namespace: monitoring
  labels:
    app: alertmanager
    component: oauth2-proxy
data:
  oauth2-proxy.cfg: |
    ## OAuth2 Proxy Config for AlertManager

    # Provider config
    provider = "oidc"
    provider_display_name = "Sophia-Artemis SSO"

    # URLs
    redirect_url = "https://alertmanager.sophia-artemis.ai/oauth2/callback"
    upstreams = [ "http://localhost:9093" ]

    # Session config
    cookie_name = "_oauth2_proxy_alertmanager"
    cookie_secret = "" # Set via environment variable
    cookie_domains = [ ".sophia-artemis.ai" ]
    cookie_secure = true
    cookie_httponly = true
    cookie_expire = "24h"
    cookie_refresh = "1h"
    cookie_samesite = "lax"

    # Security
    email_domains = [ "sophia-artemis.ai" ]
    authenticated_emails_file = "/etc/oauth2-proxy/emails.txt"
    skip_provider_button = false
    skip_auth_preflight = false
    ssl_insecure_skip_verify = false

    # Headers
    pass_authorization_header = true
    pass_access_token = true
    pass_user_headers = true
    set_authorization_header = true
    set_xauthrequest = true

    # Logging
    logging_filename = ""
    logging_max_size = 100
    logging_max_age = 7
    logging_local_time = true
    logging_compress = false
    standard_logging = true
    request_logging = true
    auth_logging = true

    # Server config
    http_address = "0.0.0.0:4180"
    https_address = ""

    # Metrics
    metrics_address = ":4181"

    # Proxy
    proxy_prefix = "/oauth2"
    ping_path = "/ping"
    ready_path = "/ready"

    # Rate limiting
    login_url_parameters = [ "rd" ]

    # Whitelist paths that don't require auth
    skip_auth_routes = [
      "GET=^/metrics",
      "GET=^/-/healthy",
      "GET=^/-/ready"
    ]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: oauth2-proxy-emails
  namespace: monitoring
  labels:
    app: alertmanager
    component: oauth2-proxy
data:
  emails.txt: |
    # Authorized users for AlertManager access
    # Add email addresses here, one per line
    *@sophia-artemis.ai
    platform-team@sophia-artemis.ai
    oncall@sophia-artemis.ai
    sre@sophia-artemis.ai
---
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-oauth
  namespace: monitoring
  labels:
    app: alertmanager
    component: oauth2-proxy
type: Opaque
stringData:
  issuer-url: "https://auth.sophia-artemis.ai/realms/platform"
  client-id: "alertmanager"
  client-secret: "CHANGE_ME_IN_PRODUCTION" # Should be set via external secrets
  cookie-secret: "CHANGE_ME_RANDOM_32_BYTE_STRING" # Generate with: openssl rand -base64 32
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy
  namespace: monitoring
  labels:
    app: oauth2-proxy
    component: auth
spec:
  replicas: 2
  selector:
    matchLabels:
      app: oauth2-proxy
  template:
    metadata:
      labels:
        app: oauth2-proxy
        component: auth
      annotations:
        checksum/config: "{{ .Values.oauth2ProxyConfigChecksum }}"
    spec:
      serviceAccountName: oauth2-proxy
      securityContext:
        runAsUser: 2000
        runAsNonRoot: true
        fsGroup: 2000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - oauth2-proxy
                topologyKey: kubernetes.io/hostname
      containers:
        - name: oauth2-proxy
          image: quay.io/oauth2-proxy/oauth2-proxy:v7.5.0
          imagePullPolicy: IfNotPresent
          args:
            - --config=/etc/oauth2-proxy/oauth2-proxy.cfg
            - --oidc-issuer-url=$(OIDC_ISSUER_URL)
            - --client-id=$(OAUTH_CLIENT_ID)
            - --client-secret=$(OAUTH_CLIENT_SECRET)
            - --cookie-secret=$(OAUTH_COOKIE_SECRET)
          env:
            - name: OIDC_ISSUER_URL
              valueFrom:
                secretKeyRef:
                  name: alertmanager-oauth
                  key: issuer-url
            - name: OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: alertmanager-oauth
                  key: client-id
            - name: OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: alertmanager-oauth
                  key: client-secret
            - name: OAUTH_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: alertmanager-oauth
                  key: cookie-secret
          ports:
            - containerPort: 4180
              name: http
              protocol: TCP
            - containerPort: 4181
              name: metrics
              protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
            limits:
              cpu: 100m
              memory: 50Mi
          volumeMounts:
            - name: config
              mountPath: /etc/oauth2-proxy
              readOnly: true
          livenessProbe:
            httpGet:
              path: /ping
              port: 4180
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 4180
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
      volumes:
        - name: config
          projected:
            sources:
              - configMap:
                  name: oauth2-proxy-config
              - configMap:
                  name: oauth2-proxy-emails
---
apiVersion: v1
kind: Service
metadata:
  name: oauth2-proxy
  namespace: monitoring
  labels:
    app: oauth2-proxy
    component: auth
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "4181"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  selector:
    app: oauth2-proxy
  ports:
    - name: http
      port: 4180
      targetPort: 4180
      protocol: TCP
    - name: metrics
      port: 4181
      targetPort: 4181
      protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oauth2-proxy
  namespace: monitoring
  labels:
    app: oauth2-proxy
    component: auth
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: oauth2-proxy
  namespace: monitoring
  labels:
    app: oauth2-proxy
    component: auth
rules:
  - apiGroups: [""]
    resources:
      - secrets
    resourceNames:
      - alertmanager-oauth
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: oauth2-proxy
  namespace: monitoring
  labels:
    app: oauth2-proxy
    component: auth
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: oauth2-proxy
subjects:
  - kind: ServiceAccount
    name: oauth2-proxy
    namespace: monitoring
