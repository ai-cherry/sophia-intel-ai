apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: monitoring-staging

bases:
  - ../../

namePrefix: staging-
nameSuffix: ""

commonLabels:
  environment: staging
  tier: monitoring

commonAnnotations:
  environment: staging
  managed-by: kustomize

# Staging-specific patches
patchesStrategicMerge:
  - |-
    apiVersion: v1
    kind: Namespace
    metadata:
      name: monitoring
    ---
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: alertmanager
      namespace: monitoring
    spec:
      replicas: 2  # 2 instances for staging
      template:
        spec:
          containers:
          - name: alertmanager
            env:
            - name: ENVIRONMENT
              value: "staging"
            - name: LOG_LEVEL
              value: "info"
            resources:
              requests:
                memory: "512Mi"
                cpu: "250m"
              limits:
                memory: "1Gi"
                cpu: "1"
            args:
            - '--config.file=/etc/alertmanager/alertmanager.yml'
            - '--storage.path=/alertmanager'
            - '--log.level=info'
            - '--cluster.listen-address=0.0.0.0:9094'
            - '--cluster.peer=alertmanager-0.alertmanager-headless:9094'
            - '--cluster.peer=alertmanager-1.alertmanager-headless:9094'
          - name: oauth2-proxy
            env:
            - name: OAUTH2_PROXY_COOKIE_SECURE
              value: "true"
            resources:
              requests:
                memory: "64Mi"
                cpu: "50m"
              limits:
                memory: "128Mi"
                cpu: "100m"
  - |-
    apiVersion: v1
    kind: Service
    metadata:
      name: alertmanager
      namespace: monitoring
    spec:
      type: ClusterIP  # Use ClusterIP with ingress for staging
  - |-
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: alertmanager
      namespace: monitoring
    spec:
      policyTypes:
      - Ingress
      - Egress
      ingress:
      - from:
        - namespaceSelector:
            matchLabels:
              name: prometheus
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx

configMapGenerator:
  - name: alertmanager-config
    behavior: replace
    files:
      - alertmanager-staging.yml
  - name: staging-env-config
    literals:
      - SLACK_WEBHOOK_URL=https://hooks.slack.com/services/STAGING/WEBHOOK
      - PAGERDUTY_KEY=staging-integration-key
      - EMAIL_SMTP_HOST=smtp.staging.example.com
      - TEAMS_WEBHOOK_URL=https://outlook.office.com/webhook/staging

# Additional staging-specific resources
resources:
  - |-
    apiVersion: v1
    kind: ResourceQuota
    metadata:
      name: alertmanager-quota
      namespace: monitoring-staging
    spec:
      hard:
        requests.cpu: "4"
        requests.memory: 4Gi
        limits.cpu: "8"
        limits.memory: 8Gi
        persistentvolumeclaims: "6"
  - |-
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: alertmanager
      namespace: monitoring-staging
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: letsencrypt-staging
        nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
    spec:
      tls:
      - hosts:
        - alertmanager-staging.sophia-intel-ai.com
        secretName: alertmanager-staging-tls
      rules:
      - host: alertmanager-staging.sophia-intel-ai.com
        http:
          paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: alertmanager
                port:
                  number: 9093
  - |-
    apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      name: alertmanager-secrets
      namespace: monitoring-staging
    spec:
      refreshInterval: 15m
      secretStoreRef:
        name: vault-backend
        kind: SecretStore
      target:
        name: alertmanager-secrets
        creationPolicy: Owner
      data:
        - secretKey: slack-webhook
          remoteRef:
            key: staging/alertmanager/slack
            property: webhook
        - secretKey: pagerduty-key
          remoteRef:
            key: staging/alertmanager/pagerduty
            property: key
        - secretKey: email-password
          remoteRef:
            key: staging/alertmanager/email
            property: password
        - secretKey: teams-webhook
          remoteRef:
            key: staging/alertmanager/teams
            property: webhook
  - |-
    apiVersion: policy/v1
    kind: PodDisruptionBudget
    metadata:
      name: alertmanager-pdb
      namespace: monitoring-staging
    spec:
      minAvailable: 1
      selector:
        matchLabels:
          app: alertmanager
