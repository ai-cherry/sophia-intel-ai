# External Secret for Redis authentication (Sophia)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: redis-auth
  namespace: sophia-system
  labels:
    app: keda
    component: security
    secret-type: redis
  annotations:
    description: "Redis authentication credentials for Sophia task queue"
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: redis-credentials
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      data:
        password: "{{ .password | b64enc }}"
        username: "{{ .username | b64enc }}"
  data:
    - secretKey: password
      remoteRef:
        key: redis/sophia
        property: password
    - secretKey: username
      remoteRef:
        key: redis/sophia
        property: username
---
# External Secret for Prometheus authentication (Sophia)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: prometheus-auth
  namespace: sophia-system
  labels:
    app: keda
    component: security
    secret-type: prometheus
  annotations:
    description: "Prometheus authentication credentials for Sophia metrics"
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: prometheus-credentials
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      data:
        bearer-token: "{{ .token | b64enc }}"
        ca-cert: "{{ .cacert | b64enc }}"
  data:
    - secretKey: token
      remoteRef:
        key: prometheus/sophia
        property: bearer-token
    - secretKey: cacert
      remoteRef:
        key: prometheus/sophia
        property: ca-certificate
---
# SecretStore configuration for Vault
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: sophia-system
  labels:
    app: keda
    component: security
    backend: vault
spec:
  provider:
    vault:
      server: "https://vault.sophia-intel-ai.internal:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "keda-sophia"
          serviceAccountRef:
            name: "external-secrets-operator"
      caBundle: |
        -----BEGIN CERTIFICATE-----
        # Vault CA certificate goes here
        -----END CERTIFICATE-----
---
# SecretStore for Sophia namespace
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: sophia-system
  labels:
    app: keda
    component: security
    backend: vault
spec:
  provider:
    vault:
      server: "https://vault.sophia-intel-ai.internal:8200"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "keda-sophia"
          serviceAccountRef:
            name: "external-secrets-operator"
      caBundle: |
        -----BEGIN CERTIFICATE-----
        # Vault CA certificate goes here
        -----END CERTIFICATE-----
---
# ClusterSecretStore for shared secrets
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: keda-cluster-secrets
  labels:
    app: keda
    component: security
    scope: cluster
spec:
  provider:
    vault:
      server: "https://vault.sophia-intel-ai.internal:8200"
      path: "keda"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "keda-cluster"
          serviceAccountRef:
            name: "external-secrets-operator"
            namespace: "external-secrets"
---
# External Secret for KEDA operator configuration
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: keda-operator-config
  namespace: keda-system
  labels:
    app: keda
    component: security
    secret-type: configuration
spec:
  refreshInterval: 30m
  secretStoreRef:
    name: keda-cluster-secrets
    kind: ClusterSecretStore
  target:
    name: keda-operator-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        # Circuit breaker configuration
        circuit-breaker-config: |
          maxScaleEventsPerMinute: {{ .circuitBreaker.maxEvents }}
          cooldownPeriod: {{ .circuitBreaker.cooldown }}
          fallbackReplicas: {{ .circuitBreaker.fallbackReplicas }}

        # Performance tuning
        performance-config: |
          scalingModifiers:
            formula: "{{ .performance.scalingFormula }}"
          metricsCacheDuration: {{ .performance.cacheSeconds }}s
          scalerCheckInterval: {{ .performance.checkInterval }}s

        # Cost optimization settings
        cost-config: |
          spotInstancePercentage: {{ .cost.spotPercentage }}
          preemptibleTolerance: {{ .cost.preemptible }}
          maxMonthlyCost: {{ .cost.maxMonthly }}
  data:
    - secretKey: circuitBreaker
      remoteRef:
        key: keda/config
        property: circuit-breaker
    - secretKey: performance
      remoteRef:
        key: keda/config
        property: performance
    - secretKey: cost
      remoteRef:
        key: keda/config
        property: cost-optimization
---
# ServiceAccount for External Secrets Operator
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-operator
  namespace: sophia-system
  labels:
    app: external-secrets
    component: security
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-operator
  namespace: sophia-system
  labels:
    app: external-secrets
    component: security
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-operator
  namespace: keda-system
  labels:
    app: external-secrets
    component: security
---
# Role for External Secrets in each namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: external-secrets-operator
  namespace: sophia-system
  labels:
    app: external-secrets
    component: security
rules:
  - apiGroups: [""]
    resources:
      - secrets
    verbs: ["create", "update", "patch", "delete", "get", "list", "watch"]
  - apiGroups: ["external-secrets.io"]
    resources:
      - externalsecrets
      - externalsecrets/status
      - secretstores
      - secretstores/status
    verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: external-secrets-operator
  namespace: sophia-system
  labels:
    app: external-secrets
    component: security
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-secrets-operator
subjects:
  - kind: ServiceAccount
    name: external-secrets-operator
    namespace: sophia-system
---
# Same for Sophia namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: external-secrets-operator
  namespace: sophia-system
  labels:
    app: external-secrets
    component: security
rules:
  - apiGroups: [""]
    resources:
      - secrets
    verbs: ["create", "update", "patch", "delete", "get", "list", "watch"]
  - apiGroups: ["external-secrets.io"]
    resources:
      - externalsecrets
      - externalsecrets/status
      - secretstores
      - secretstores/status
    verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: external-secrets-operator
  namespace: sophia-system
  labels:
    app: external-secrets
    component: security
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-secrets-operator
subjects:
  - kind: ServiceAccount
    name: external-secrets-operator
    namespace: sophia-system
---
# Same for KEDA namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: external-secrets-operator
  namespace: keda-system
  labels:
    app: external-secrets
    component: security
rules:
  - apiGroups: [""]
    resources:
      - secrets
    verbs: ["create", "update", "patch", "delete", "get", "list", "watch"]
  - apiGroups: ["external-secrets.io"]
    resources:
      - externalsecrets
      - externalsecrets/status
      - secretstores
      - secretstores/status
      - clustersecretstores
      - clustersecretstores/status
    verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: external-secrets-operator
  namespace: keda-system
  labels:
    app: external-secrets
    component: security
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: external-secrets-operator
subjects:
  - kind: ServiceAccount
    name: external-secrets-operator
    namespace: keda-system
---
# Fallback secrets for development/testing (using Kubernetes secrets)
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials-fallback
  namespace: sophia-system
  labels:
    app: keda
    component: security
    environment: development
type: Opaque
stringData:
  password: "changeme-redis-password"
  username: "default"
---
apiVersion: v1
kind: Secret
metadata:
  name: prometheus-credentials-fallback
  namespace: sophia-system
  labels:
    app: keda
    component: security
    environment: development
type: Opaque
stringData:
  bearer-token: "changeme-prometheus-token"
  ca-cert: |
    -----BEGIN CERTIFICATE-----
    # Development CA certificate
    -----END CERTIFICATE-----
