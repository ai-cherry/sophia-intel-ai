apiVersion: apps/v1
kind: Deployment
metadata:
  name: artemis-orchestrator
  namespace: artemis-mesh
  labels:
    app: artemis-orchestrator
    version: stable
    domain: artemis
spec:
  replicas: 3
  selector:
    matchLabels:
      app: artemis-orchestrator
      version: stable
  template:
    metadata:
      labels:
        app: artemis-orchestrator
        version: stable
        domain: artemis
      annotations:
        # Istio sidecar injection
        sidecar.istio.io/inject: "true"
        # Prometheus scraping
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        # Istio configuration
        sidecar.istio.io/proxyCPU: "100m"
        sidecar.istio.io/proxyMemory: "128Mi"
        sidecar.istio.io/proxyCPULimit: "200m"
        sidecar.istio.io/proxyMemoryLimit: "256Mi"
        # Traffic management
        traffic.sidecar.istio.io/includeInboundPorts: "8080,9090"
        traffic.sidecar.istio.io/excludeOutboundPorts: "15090,15021"
    spec:
      serviceAccountName: artemis-orchestrator
      containers:
        - name: artemis-orchestrator
          image: sophia-artemis/artemis-orchestrator:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: DOMAIN
              value: "artemis"
            - name: MAX_CONCURRENT_TASKS
              value: "8"
            - name: LOG_LEVEL
              value: "info"
            - name: ISTIO_ENABLED
              value: "true"
            - name: MCP_ROUTER_URL
              value: "http://mcp-router.artemis-mesh:8080"
            - name: MEMORY_SERVICE_URL
              value: "http://memory-service.shared-services:8080"
            - name: CONFIG_SERVICE_URL
              value: "http://config-service.shared-services:8080"
          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
            - name: secrets
              mountPath: /app/secrets
              readOnly: true
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1000m
              memory: 2Gi
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
              httpHeaders:
                - name: x-probe
                  value: liveness
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
              httpHeaders:
                - name: x-probe
                  value: readiness
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health/startup
              port: 8080
              httpHeaders:
                - name: x-probe
                  value: startup
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 30
      volumes:
        - name: config
          configMap:
            name: artemis-config
        - name: secrets
          secret:
            secretName: artemis-secrets
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - artemis-orchestrator
                topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: artemis-orchestrator
---
apiVersion: v1
kind: Service
metadata:
  name: artemis-orchestrator
  namespace: artemis-mesh
  labels:
    app: artemis-orchestrator
    domain: artemis
spec:
  type: ClusterIP
  selector:
    app: artemis-orchestrator
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: metrics
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: artemis-orchestrator
  namespace: artemis-mesh
  labels:
    app: artemis-orchestrator
    domain: artemis
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: artemis-orchestrator
  namespace: artemis-mesh
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: artemis-orchestrator
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    - type: Pods
      pods:
        metric:
          name: concurrent_tasks_active
        target:
          type: AverageValue
          averageValue: "6"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
        - type: Pods
          value: 1
          periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 30
        - type: Pods
          value: 2
          periodSeconds: 30
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: artemis-orchestrator
  namespace: artemis-mesh
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: artemis-orchestrator
---
# Canary deployment for testing
apiVersion: apps/v1
kind: Deployment
metadata:
  name: artemis-orchestrator-canary
  namespace: artemis-mesh
  labels:
    app: artemis-orchestrator
    version: canary
    domain: artemis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: artemis-orchestrator
      version: canary
  template:
    metadata:
      labels:
        app: artemis-orchestrator
        version: canary
        domain: artemis
      annotations:
        sidecar.istio.io/inject: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: artemis-orchestrator
      containers:
        - name: artemis-orchestrator
          image: sophia-artemis/artemis-orchestrator:canary
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: VERSION
              value: "canary"
            - name: DOMAIN
              value: "artemis"
            - name: MAX_CONCURRENT_TASKS
              value: "8"
            - name: LOG_LEVEL
              value: "debug"
            - name: ISTIO_ENABLED
              value: "true"
          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
            - name: secrets
              mountPath: /app/secrets
              readOnly: true
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        - name: config
          configMap:
            name: artemis-config
        - name: secrets
          secret:
            secretName: artemis-secrets
