apiVersion: apps/v1
kind: Deployment
metadata:
  name: unified-api
  namespace: sophia-intel-ai
  labels:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: unified-api
    app.kubernetes.io/part-of: application
    tier: "2"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sophia-intel-ai
      app.kubernetes.io/component: unified-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sophia-intel-ai
        app.kubernetes.io/component: unified-api
        app.kubernetes.io/part-of: application
        tier: "2"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: sophia-service-account
      initContainers:
        - name: wait-for-dependencies
          image: busybox:1.35
          command: ["sh", "-c"]
          args:
            - |
              echo "Waiting for Redis..."
              until nc -z redis-service 6379; do
                echo "Redis not ready, sleeping..."
                sleep 5
              done
              echo "Waiting for PostgreSQL..."
              until nc -z postgres-service 5432; do
                echo "PostgreSQL not ready, sleeping..."
                sleep 5
              done
              echo "Waiting for Weaviate..."
              until nc -z weaviate-service 8080; do
                echo "Weaviate not ready, sleeping..."
                sleep 5
              done
              echo "All dependencies ready!"
      containers:
        - name: unified-api
          image: sophia-intel-ai/unified-api:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          env:
            - name: SOPHIA_ENVIRONMENT
              value: "production"
            - name: LOG_LEVEL
              value: "INFO"
            - name: PYTHONPATH
              value: "/app"
            - name: REDIS_URL
              value: "redis://redis-service:6379"
            - name: POSTGRES_URL
              value: "postgresql://sophia:$(POSTGRES_PASSWORD)@postgres-service:5432/sophia"
            - name: WEAVIATE_URL
              value: "http://weaviate-service:8080"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sophia-secrets
                  key: postgres-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sophia-secrets
                  key: redis-password
          volumeMounts:
            - name: app-logs
              mountPath: /app/logs
          resources:
            requests:
              memory: "1Gi"
              cpu: "750m"
            limits:
              memory: "2Gi"
              cpu: "1500m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 10
      volumes:
        - name: app-logs
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: unified-api-service
  namespace: sophia-intel-ai
  labels:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: unified-api
    app.kubernetes.io/part-of: application
spec:
  selector:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: unified-api
  ports:
    - name: http
      port: 8000
      targetPort: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sophia-orchestrator
  namespace: sophia-intel-ai
  labels:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: sophia-orchestrator
    app.kubernetes.io/part-of: application
    tier: "2"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sophia-intel-ai
      app.kubernetes.io/component: sophia-orchestrator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sophia-intel-ai
        app.kubernetes.io/component: sophia-orchestrator
        app.kubernetes.io/part-of: application
        tier: "2"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: sophia-service-account
      initContainers:
        - name: wait-for-unified-api
          image: busybox:1.35
          command: ["sh", "-c"]
          args:
            - |
              echo "Waiting for Unified API..."
              until nc -z unified-api-service 8000; do
                echo "Unified API not ready, sleeping..."
                sleep 5
              done
              echo "Unified API ready!"
      containers:
        - name: sophia-orchestrator
          image: sophia-intel-ai/sophia-orchestrator:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          env:
            - name: SOPHIA_ENVIRONMENT
              value: "production"
            - name: LOG_LEVEL
              value: "INFO"
            - name: PYTHONPATH
              value: "/app"
            - name: REDIS_URL
              value: "redis://redis-service:6379"
            - name: POSTGRES_URL
              value: "postgresql://sophia:$(POSTGRES_PASSWORD)@postgres-service:5432/sophia"
            - name: UNIFIED_API_URL
              value: "http://unified-api-service:8000"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sophia-secrets
                  key: postgres-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sophia-secrets
                  key: redis-password
          volumeMounts:
            - name: app-logs
              mountPath: /app/logs
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 10
      volumes:
        - name: app-logs
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: sophia-orchestrator-service
  namespace: sophia-intel-ai
  labels:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: sophia-orchestrator
    app.kubernetes.io/part-of: application
spec:
  selector:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: sophia-orchestrator
  ports:
    - name: http
      port: 8000
      targetPort: http
      protocol: TCP
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: artemis-orchestrator
  namespace: sophia-intel-ai
  labels:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: artemis-orchestrator
    app.kubernetes.io/part-of: application
    tier: "2"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sophia-intel-ai
      app.kubernetes.io/component: artemis-orchestrator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sophia-intel-ai
        app.kubernetes.io/component: artemis-orchestrator
        app.kubernetes.io/part-of: application
        tier: "2"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: sophia-service-account
      initContainers:
        - name: wait-for-unified-api
          image: busybox:1.35
          command: ["sh", "-c"]
          args:
            - |
              echo "Waiting for Unified API..."
              until nc -z unified-api-service 8000; do
                echo "Unified API not ready, sleeping..."
                sleep 5
              done
              echo "Unified API ready!"
      containers:
        - name: artemis-orchestrator
          image: sophia-intel-ai/artemis-orchestrator:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          env:
            - name: SOPHIA_ENVIRONMENT
              value: "production"
            - name: LOG_LEVEL
              value: "INFO"
            - name: PYTHONPATH
              value: "/app"
            - name: REDIS_URL
              value: "redis://redis-service:6379"
            - name: POSTGRES_URL
              value: "postgresql://sophia:$(POSTGRES_PASSWORD)@postgres-service:5432/sophia"
            - name: UNIFIED_API_URL
              value: "http://unified-api-service:8000"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sophia-secrets
                  key: postgres-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sophia-secrets
                  key: redis-password
          volumeMounts:
            - name: app-logs
              mountPath: /app/logs
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 10
      volumes:
        - name: app-logs
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: artemis-orchestrator-service
  namespace: sophia-intel-ai
  labels:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: artemis-orchestrator
    app.kubernetes.io/part-of: application
spec:
  selector:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: artemis-orchestrator
  ports:
    - name: http
      port: 8000
      targetPort: http
      protocol: TCP
  type: ClusterIP
