apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: sophia-intel-ai
  labels:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: redis
    app.kubernetes.io/part-of: infrastructure
    tier: "1"
spec:
  serviceName: redis-service
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sophia-intel-ai
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sophia-intel-ai
        app.kubernetes.io/component: redis
        app.kubernetes.io/part-of: infrastructure
        tier: "1"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: sophia-service-account
      initContainers:
      - name: config-init
        image: busybox:1.35
        command: ['sh', '-c', 'cp /tmp/redis.conf /etc/redis/redis.conf']
        volumeMounts:
        - name: config
          mountPath: /tmp
        - name: redis-config
          mountPath: /etc/redis
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        - /etc/redis/redis.conf
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sophia-secrets
              key: redis-password
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      - name: redis-exporter
        image: oliver006/redis_exporter:latest
        ports:
        - containerPort: 9121
          name: metrics
        env:
        - name: REDIS_ADDR
          value: "redis://localhost:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sophia-secrets
              key: redis-password
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: config
        configMap:
          name: sophia-config
      - name: redis-config
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: sophia-ssd-storage
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: sophia-intel-ai
  labels:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: redis
    app.kubernetes.io/part-of: infrastructure
spec:
  selector:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: redis
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  - name: metrics
    port: 9121
    targetPort: metrics
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: sophia-intel-ai
  labels:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: postgres
    app.kubernetes.io/part-of: infrastructure
    tier: "1"
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sophia-intel-ai
      app.kubernetes.io/component: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sophia-intel-ai
        app.kubernetes.io/component: postgres
        app.kubernetes.io/part-of: infrastructure
        tier: "1"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9187"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: sophia-service-account
      initContainers:
      - name: postgres-init
        image: busybox:1.35
        command: ['sh', '-c', 'mkdir -p /var/lib/postgresql/data/pgdata && chown -R 999:999 /var/lib/postgresql/data']
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        securityContext:
          runAsUser: 0
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: sophia
        - name: POSTGRES_USER
          value: sophia
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sophia-secrets
              key: postgres-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-init-scripts
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - sophia
            - -d
            - sophia
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - sophia
            - -d
            - sophia
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      - name: postgres-exporter
        image: prometheuscommunity/postgres-exporter:latest
        ports:
        - containerPort: 9187
          name: metrics
        env:
        - name: DATA_SOURCE_NAME
          value: "postgresql://sophia:$(POSTGRES_PASSWORD)@localhost:5432/sophia?sslmode=disable"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sophia-secrets
              key: postgres-password
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: postgres-init-scripts
        configMap:
          name: postgres-init-scripts
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: sophia-ssd-storage
      resources:
        requests:
          storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: sophia-intel-ai
  labels:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: postgres
    app.kubernetes.io/part-of: infrastructure
spec:
  selector:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: postgres
  ports:
  - name: postgres
    port: 5432
    targetPort: postgres
  - name: metrics
    port: 9187
    targetPort: metrics
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: weaviate
  namespace: sophia-intel-ai
  labels:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: weaviate
    app.kubernetes.io/part-of: infrastructure
    tier: "1"
spec:
  serviceName: weaviate-service
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sophia-intel-ai
      app.kubernetes.io/component: weaviate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sophia-intel-ai
        app.kubernetes.io/component: weaviate
        app.kubernetes.io/part-of: infrastructure
        tier: "1"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2112"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: sophia-service-account
      containers:
      - name: weaviate
        image: semitechnologies/weaviate:latest
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 2112
          name: metrics
        env:
        - name: QUERY_DEFAULTS_LIMIT
          value: "25"
        - name: AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED
          value: "true"
        - name: PERSISTENCE_DATA_PATH
          value: "/var/lib/weaviate"
        - name: DEFAULT_VECTORIZER_MODULE
          value: "text2vec-openai"
        - name: ENABLE_MODULES
          value: "text2vec-openai,generative-openai,backup-filesystem"
        - name: BACKUP_FILESYSTEM_PATH
          value: "/var/lib/weaviate/backups"
        - name: CLUSTER_HOSTNAME
          value: "node1"
        - name: LOG_LEVEL
          value: "info"
        - name: PROMETHEUS_MONITORING_ENABLED
          value: "true"
        volumeMounts:
        - name: weaviate-data
          mountPath: /var/lib/weaviate
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /v1/.well-known/live
            port: http
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /v1/.well-known/ready
            port: http
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
  volumeClaimTemplates:
  - metadata:
      name: weaviate-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: sophia-ssd-storage
      resources:
        requests:
          storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: weaviate-service
  namespace: sophia-intel-ai
  labels:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: weaviate
    app.kubernetes.io/part-of: infrastructure
spec:
  selector:
    app.kubernetes.io/name: sophia-intel-ai
    app.kubernetes.io/component: weaviate
  ports:
  - name: http
    port: 8080
    targetPort: http
  - name: metrics
    port: 2112
    targetPort: metrics
  type: ClusterIP