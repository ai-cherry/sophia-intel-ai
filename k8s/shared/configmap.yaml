apiVersion: v1
kind: ConfigMap
metadata:
  name: artemis-config
  namespace: artemis-mesh
  labels:
    app: artemis-orchestrator
    domain: artemis
data:
  application.yaml: |
    domain: artemis
    environment: production

    # Istio configuration
    istio:
      enabled: true
      namespace: artemis-mesh
      sidecar:
        inject: true
        interceptMode: REDIRECT
        includeInboundPorts: "8080,9090"
        excludeOutboundPorts: "15090,15021"

    # Task limits
    orchestrator:
      maxConcurrentTasks: 8
      taskTimeout: 300s
      retryPolicy:
        maxAttempts: 3
        backoffMultiplier: 2
        initialInterval: 1s
        maxInterval: 30s

    # MCP configuration
    mcp:
      routerUrl: http://mcp-router.artemis-mesh:8080
      connectionPoolSize: 10
      requestTimeout: 30s
      keepAlive: true
      servers:
        - filesystem
        - sqlite
        - git
        - github
        - puppeteer

    # Shared services
    services:
      memory:
        url: http://memory-service.shared-services:8080
        timeout: 10s
      config:
        url: http://config-service.shared-services:8080
        timeout: 5s
      logging:
        url: http://logging-service.shared-services:8080
        level: info
      metrics:
        url: http://metrics-service.shared-services:8080
        pushInterval: 30s

    # Observability
    observability:
      tracing:
        enabled: true
        samplingRate: 1.0
        endpoint: http://zipkin.istio-system:9411/api/v2/spans
      metrics:
        enabled: true
        port: 9090
        path: /metrics
      logging:
        level: info
        format: json
        includeTraceId: true

    # Security
    security:
      mtls:
        enabled: true
        mode: STRICT
      authorization:
        enabled: true
        allowedPrincipals:
          - cluster.local/ns/artemis-mesh/sa/artemis-orchestrator
          - cluster.local/ns/shared-services/sa/memory-service
          - cluster.local/ns/shared-services/sa/config-service
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sophia-config
  namespace: sophia-mesh
  labels:
    app: sophia-orchestrator
    domain: sophia
data:
  application.yaml: |
    domain: sophia
    environment: production

    # Istio configuration
    istio:
      enabled: true
      namespace: sophia-mesh
      sidecar:
        inject: true
        interceptMode: REDIRECT
        includeInboundPorts: "8080,9090"
        excludeOutboundPorts: "15090,15021"

    # Task limits
    orchestrator:
      maxConcurrentTasks: 8
      taskTimeout: 600s
      retryPolicy:
        maxAttempts: 3
        backoffMultiplier: 2
        initialInterval: 2s
        maxInterval: 60s

    # MCP configuration
    mcp:
      routerUrl: http://mcp-router.sophia-mesh:8080
      connectionPoolSize: 15
      requestTimeout: 60s
      keepAlive: true
      servers:
        - postgres
        - sqlite
        - slack
        - google-maps

    # Business services
    services:
      businessLogic:
        url: http://business-logic.sophia-mesh:8080
        timeout: 30s
      dataPipeline:
        url: http://data-pipeline.sophia-mesh:8080
        timeout: 120s
      integrationHub:
        url: http://integration-hub.sophia-mesh:8080
        timeout: 30s

    # Shared services
    sharedServices:
      memory:
        url: http://memory-service.shared-services:8080
        timeout: 10s
      config:
        url: http://config-service.shared-services:8080
        timeout: 5s
      logging:
        url: http://logging-service.shared-services:8080
        level: info
      metrics:
        url: http://metrics-service.shared-services:8080
        pushInterval: 30s

    # Observability
    observability:
      tracing:
        enabled: true
        samplingRate: 1.0
        endpoint: http://zipkin.istio-system:9411/api/v2/spans
      metrics:
        enabled: true
        port: 9090
        path: /metrics
      logging:
        level: info
        format: json
        includeTraceId: true

    # Security
    security:
      mtls:
        enabled: true
        mode: STRICT
      authorization:
        enabled: true
        allowedPrincipals:
          - cluster.local/ns/sophia-mesh/sa/sophia-orchestrator
          - cluster.local/ns/shared-services/sa/memory-service
          - cluster.local/ns/shared-services/sa/config-service

    # Data processing
    dataProcessing:
      batchSize: 1000
      parallelism: 4
      checkpointInterval: 60s
      errorThreshold: 0.05
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-mesh-config
  namespace: shared-services
  labels:
    mesh: sophia-artemis
data:
  mesh-config.yaml: |
    # Global mesh configuration
    mesh:
      name: sophia-artemis
      trustDomain: sophia-artemis.local

    # Domain boundaries
    domains:
      artemis:
        namespace: artemis-mesh
        services:
          - artemis-orchestrator
          - artemis-agents
          - mcp-router
        maxConcurrentTasks: 8
      sophia:
        namespace: sophia-mesh
        services:
          - sophia-orchestrator
          - business-logic
          - data-pipeline
          - integration-hub
        maxConcurrentTasks: 8
      shared:
        namespace: shared-services
        services:
          - memory-service
          - config-service
          - logging-service
          - metrics-service

    # Cross-domain policies
    crossDomain:
      enabled: true
      requireToken: true
      allowedFlows:
        - from: artemis-mesh
          to: shared-services
          methods: ["GET", "POST", "PUT"]
        - from: sophia-mesh
          to: shared-services
          methods: ["GET", "POST", "PUT"]
        - from: artemis-mesh
          to: sophia-mesh
          methods: ["GET", "POST"]
          paths: ["/api/public/*", "/api/integration/*"]
        - from: sophia-mesh
          to: artemis-mesh
          methods: ["GET", "POST"]
          paths: ["/api/public/*", "/api/integration/*"]

    # Traffic management
    trafficManagement:
      defaultTimeout: 30s
      retryPolicy:
        attempts: 3
        perTryTimeout: 10s
        retryOn: "5xx,reset,connect-failure,refused-stream"
      circuitBreaker:
        consecutiveErrors: 5
        interval: 30s
        baseEjectionTime: 30s
        maxEjectionPercent: 50
      rateLimit:
        enabled: true
        globalLimit: 1000
        perServiceLimit: 100

    # Observability
    observability:
      prometheus:
        enabled: true
        endpoint: http://prometheus.istio-system:9090
      grafana:
        enabled: true
        endpoint: http://grafana.istio-system:3000
      zipkin:
        enabled: true
        endpoint: http://zipkin.istio-system:9411
      kiali:
        enabled: true
        endpoint: http://kiali.istio-system:20001
