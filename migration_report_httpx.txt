============================================================
ASYNC HTTPX MIGRATION REPORT
============================================================

Files analyzed: 384
Files with blocking calls: 126
Total blocking calls found: 675

FILES TO MIGRATE:
----------------------------------------

📁 proxy_bridge.py
   Async ready: ✅
   Blocking calls: 1
   Line 70: status_code=response.status_code,...

📁 monitor_cline_activity.py
   Async ready: ✅
   Blocking calls: 3
   Line 17: from rich.text import Text...
   Line 95: "code": response.status_code,...
   Line 119: if response.status_code < 400:...

📁 claude_coordination_dashboard.py
   Async ready: ✅
   Blocking calls: 14
   Line 11: import requests...
   Line 29: response = requests.get(f"{self.mcp_server_url}/healthz", ti...
   Line 30: return response.status_code == 200...

📁 comprehensive_deployment_test.py
   Async ready: ✅
   Blocking calls: 3
   Line 139: data = await resp.json()...
   Line 200: data = await resp.json()...
   Line 208: content = await resp.text()...

📁 dev.py
   Async ready: ❌
   Blocking calls: 4
   Line 18: import requests...
   Line 163: response = requests.get(url, timeout=2)...
   Line 164: if response.status_code == 200:...

📁 final_system_status.py
   Async ready: ❌
   Blocking calls: 5
   Line 6: import requests...
   Line 13: response = requests.get(url, timeout=2)...
   Line 15: response = requests.post(url, json=data, timeout=2)...

📁 tests/load_test.py
   Async ready: ✅
   Blocking calls: 1
   Line 26: body = await response.text()...

📁 scripts/setup_complete_portkey.py
   Async ready: ✅
   Blocking calls: 14
   Line 54: if response.status_code == 200:...
   Line 55: result = response.json()...
   Line 60: print(f"  ❌ OpenRouter: Failed ({response.status_code})")...

📁 scripts/enhanced-infrastructure-setup.py
   Async ready: ✅
   Blocking calls: 5
   Line 9: import requests...
   Line 146: response = requests.post(...
   Line 152: if response.status_code == 200:...

📁 scripts/provision-fly-infrastructure.py
   Async ready: ❌
   Blocking calls: 18
   Line 9: import requests...
   Line 51: response = requests.post(...
   Line 57: if response.status_code in [200, 201]:...
