global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: "sophia-intel-ai-prod"
    replica: "prometheus-1"

rule_files:
  - "/etc/prometheus/rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

scrape_configs:
  # Sophia Intel AI Application Metrics
  - job_name: "sophia-intel-ai"
    scrape_interval: 10s
    metrics_path: "/metrics"
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - production
            - staging
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Health Monitoring Endpoints
  - job_name: "sophia-health-monitoring"
    scrape_interval: 5s
    metrics_path: "/health/metrics"
    static_configs:
      - targets: ["sophia-intel-ai-service.production.svc.cluster.local:80"]
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: "sophia_health_.*"
        target_label: __tmp_sophia_category
        replacement: "system_vitals"
      - source_labels: [__name__]
        regex: "sophia_orchestrator_.*"
        target_label: __tmp_sophia_category
        replacement: "operational_readiness"
      - source_labels: [__name__]
        regex: "sophia_connection_.*"
        target_label: __tmp_sophia_category
        replacement: "resource_deployment"

  # Kubernetes System Metrics
  - job_name: "kubernetes-nodes"
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes Pods
  - job_name: "kubernetes-pods"
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)

  # Redis Metrics (if using Redis Exporter)
  - job_name: "redis"
    static_configs:
      - targets: ["redis-exporter:9121"]
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: "redis_.*"
        target_label: __tmp_sophia_category
        replacement: "resource_deployment"

  # Node Exporter for System Metrics
  - job_name: "node-exporter"
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - monitoring
    relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        regex: "node-exporter"
        action: keep
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: "node_(cpu|memory|disk|load|network)_.*"
        target_label: __tmp_sophia_category
        replacement: "system_vitals"

# Custom recording rules for Sophia dashboard
recording_rules:
  - name: sophia_system_vitals
    interval: 15s
    rules:
      - record: sophia:system_cpu_usage_percent
        expr: 100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)

      - record: sophia:system_memory_usage_percent
        expr: 100 * (1 - ((node_memory_MemAvailable_bytes or node_memory_MemFree_bytes) / node_memory_MemTotal_bytes))

      - record: sophia:system_disk_usage_percent
        expr: 100 - ((node_filesystem_avail_bytes{mountpoint="/"} / node_filesystem_size_bytes{mountpoint="/"}) * 100)

  - name: sophia_operational_readiness
    interval: 30s
    rules:
      - record: sophia:service_availability_percent
        expr: 100 * (up{job="sophia-intel-ai"})

      - record: sophia:response_time_p95_ms
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) * 1000

      - record: sophia:error_rate_percent
        expr: 100 * (rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]))

      - record: sophia:throughput_rps
        expr: rate(http_requests_total[5m])

  - name: sophia_resource_deployment
    interval: 30s
    rules:
      - record: sophia:active_connections
        expr: sum(sophia_connection_active_total) by (type)

      - record: sophia:connection_pool_utilization_percent
        expr: 100 * (sophia_connection_active_total / sophia_connection_max_total)

      - record: sophia:redis_operations_per_second
        expr: rate(redis_commands_processed_total[5m])

      - record: sophia:database_connection_utilization
        expr: 100 * (sophia_db_connections_active / sophia_db_connections_max)

  - name: sophia_threat_detection
    interval: 15s
    rules:
      - record: sophia:anomaly_score
        expr: |
          (
            (sophia:system_cpu_usage_percent > 90) * 0.3 +
            (sophia:system_memory_usage_percent > 85) * 0.3 +
            (sophia:error_rate_percent > 5) * 0.4
          )

      - record: sophia:security_events_per_minute
        expr: rate(sophia_security_events_total[1m]) * 60

      - record: sophia:failed_auth_attempts_per_minute
        expr: rate(sophia_auth_failures_total[1m]) * 60
