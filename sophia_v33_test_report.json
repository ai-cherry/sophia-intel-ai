{
  "sophia_version": "3.3",
  "test_suite": "Comprehensive Integration Test",
  "summary": {
    "start_time": "2025-08-09T05:43:43.153432",
    "end_time": "2025-08-09T05:44:15.691534",
    "duration_seconds": 32.538102,
    "overall_score": 91.8918918918919,
    "total_tests": 37,
    "total_passed": 34,
    "total_failed": 2,
    "total_errors": 1
  },
  "category_results": {
    "Security Fixes": {
      "category": "Security Fixes",
      "total_tests": 3,
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "score_percentage": 100.0,
      "status": "PASS",
      "results": [
        {
          "test": "Fixed Salt Check",
          "status": "PASS",
          "message": "No hardcoded salt found - using unique salt generation"
        },
        {
          "test": "Runtime Export Security",
          "status": "PASS",
          "message": "Runtime export includes proper permission handling"
        },
        {
          "test": "Audit Logging",
          "status": "PASS",
          "message": "Comprehensive audit logging implemented"
        }
      ]
    },
    "Pulumi ESC Integration": {
      "category": "Pulumi ESC Integration",
      "total_tests": 7,
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "score_percentage": 100.0,
      "status": "PASS",
      "results": [
        {
          "test": "ESC Manager Exists",
          "status": "PASS",
          "message": "Pulumi ESC manager found"
        },
        {
          "test": "ESC Feature: Main ESC manager class",
          "status": "PASS",
          "message": "PulumiESCManager implemented"
        },
        {
          "test": "ESC Feature: Environment opening capability",
          "status": "PASS",
          "message": "open_environment implemented"
        },
        {
          "test": "ESC Feature: Secret setting capability",
          "status": "PASS",
          "message": "set_secret implemented"
        },
        {
          "test": "ESC Feature: Secret rotation capability",
          "status": "PASS",
          "message": "rotate_secret implemented"
        },
        {
          "test": "ESC Feature: GitHub integration",
          "status": "PASS",
          "message": "sync_from_github_secrets implemented"
        },
        {
          "test": "Environment Template Creation",
          "status": "PASS",
          "message": "Environment template created successfully"
        }
      ]
    },
    "Syntax Validation": {
      "category": "Syntax Validation",
      "total_tests": 7,
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "score_percentage": 100.0,
      "status": "PASS",
      "results": [
        {
          "test": "Syntax Validator Exists",
          "status": "PASS",
          "message": "Local syntax validator found"
        },
        {
          "test": "Python Syntax Validation",
          "status": "PASS",
          "message": "Python syntax validation passed"
        },
        {
          "test": "GitHub Actions Workflow",
          "status": "PASS",
          "message": "Syntax validation workflow found"
        },
        {
          "test": "Workflow: Python validation job",
          "status": "PASS",
          "message": "python-syntax-validation job configured"
        },
        {
          "test": "Workflow: Shell validation job",
          "status": "PASS",
          "message": "shell-syntax-validation job configured"
        },
        {
          "test": "Workflow: Security check job",
          "status": "PASS",
          "message": "security-hardening-check job configured"
        },
        {
          "test": "Workflow: Report generation job",
          "status": "PASS",
          "message": "comprehensive-report job configured"
        }
      ]
    },
    "Environment Management": {
      "category": "Environment Management",
      "total_tests": 3,
      "passed": 2,
      "failed": 0,
      "errors": 1,
      "score_percentage": 66.66666666666666,
      "status": "FAIL",
      "results": [
        {
          "test": "Environment Manager CLI",
          "status": "ERROR",
          "message": "Error testing environment manager: Command '['/usr/bin/python', '/opt/sophia/secrets/env_manager.py', 'list']' timed out after 30 seconds"
        },
        {
          "test": "Environment Activation Script",
          "status": "PASS",
          "message": "Activation script found"
        },
        {
          "test": "Activation Script Executable",
          "status": "PASS",
          "message": "Script is executable"
        }
      ]
    },
    "AI Router Integration": {
      "category": "AI Router Integration",
      "total_tests": 1,
      "passed": 0,
      "failed": 1,
      "errors": 0,
      "score_percentage": 0.0,
      "status": "FAIL",
      "results": [
        {
          "test": "AI Router Exists",
          "status": "FAIL",
          "message": "AI router not found"
        }
      ]
    },
    "Lambda Labs Integration": {
      "category": "Lambda Labs Integration",
      "total_tests": 2,
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "score_percentage": 100.0,
      "status": "PASS",
      "results": [
        {
          "test": "Lambda Labs Integration",
          "status": "PASS",
          "message": "Lambda Labs integration found"
        },
        {
          "test": "Lambda Labs Security",
          "status": "PASS",
          "message": "Uses environment variables for credentials"
        }
      ]
    },
    "Unified Management": {
      "category": "Unified Management",
      "total_tests": 3,
      "passed": 3,
      "failed": 0,
      "errors": 0,
      "score_percentage": 100.0,
      "status": "PASS",
      "results": [
        {
          "test": "Sophia.sh Script",
          "status": "PASS",
          "message": "Unified management script found"
        },
        {
          "test": "Sophia.sh Executable",
          "status": "PASS",
          "message": "Script is executable"
        },
        {
          "test": "Sophia.sh Help",
          "status": "PASS",
          "message": "Help command works"
        }
      ]
    },
    "File Permissions": {
      "category": "File Permissions",
      "total_tests": 2,
      "passed": 2,
      "failed": 0,
      "errors": 0,
      "score_percentage": 100.0,
      "status": "PASS",
      "results": [
        {
          "test": "Secrets Directory Permissions",
          "status": "PASS",
          "message": "Correct permissions: 700"
        },
        {
          "test": "Key File Permissions: .env.encrypted",
          "status": "PASS",
          "message": "Correct permissions: 600"
        }
      ]
    },
    "Credential Validation": {
      "category": "Credential Validation",
      "total_tests": 2,
      "passed": 1,
      "failed": 1,
      "errors": 0,
      "score_percentage": 50.0,
      "status": "FAIL",
      "results": [
        {
          "test": "Credential Validator Exists",
          "status": "PASS",
          "message": "Credential validation script found"
        },
        {
          "test": "Credential Validation Run",
          "status": "FAIL",
          "message": "Validation script failed to run"
        }
      ]
    },
    "Production Readiness": {
      "category": "Production Readiness",
      "total_tests": 7,
      "passed": 7,
      "failed": 0,
      "errors": 0,
      "score_percentage": 100.0,
      "status": "PASS",
      "results": [
        {
          "test": "Directory: /opt/sophia",
          "status": "PASS",
          "message": "Directory exists"
        },
        {
          "test": "Directory: /opt/sophia/secrets",
          "status": "PASS",
          "message": "Directory exists"
        },
        {
          "test": "Directory: /opt/sophia/logs",
          "status": "PASS",
          "message": "Directory exists"
        },
        {
          "test": "Directory: /opt/sophia/pids",
          "status": "PASS",
          "message": "Directory exists"
        },
        {
          "test": "Core Script: sophia.sh",
          "status": "PASS",
          "message": "Script exists"
        },
        {
          "test": "Core Script: pulumi_esc_manager.py",
          "status": "PASS",
          "message": "Script exists"
        },
        {
          "test": "Core Script: env_manager.py",
          "status": "PASS",
          "message": "Script exists"
        }
      ]
    }
  }
}